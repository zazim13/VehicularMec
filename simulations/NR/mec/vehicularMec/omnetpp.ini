[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true

##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 5
seed-set = ${repetition}
output-scalar-file-append = false
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
**.routingRecorder.enabled = false
**.mecHost.**.vector-recording = true
**.mecHost.**.scalar-recording = true
**.vector-recording = true
**.scalar-recording = true
**.statistic-recording = true
**.bin-recording = true
#**.*recording = true




##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
#print-undisposed = true

sim-time-limit = 20s
#warmup-period = 10s

*.playgroundSizeX = 11000m
*.playgroundSizeY = 8000m
*.playgroundSizeZ = 500m


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5

# ----------------------------------------------------------------------------- #

network = simu5g.simulations.NR.mec.vehicularMec.vehicularMecTest

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency  = 700 MHz
*.carrierAggregation.componentCarrier[0].numerologyIndex = 1
*.carrierAggregation.componentCarrier[0].numBands = 50 #${numBands=25}
*.*.cellularNic.LteChannelModelType = "NRChannelModel"

*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = index


*.car[*].cellularNic.numCarriers = 1
#*.car[*].cellularNic.numNRCarriers = 1
#*.car[*].cellularNic.channelModel[0].componentCarrierIndex = 0
*.car[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0



# Enable handover
#*.car[*].cellularNic.nrPhy.enableHandover = true
#*.gNodeB*.cellularNic.phy.enableHandover = true
#*.gNodeB*.cellularNic.phy.handoverLatency = 50ms

# X2 and SCTP configuration
    
#*.gNodeB2.numX2Apps = 1 # one x2App per peering eNodeB
#*.gNodeB1.numX2Apps = 1 # one x2App per peering eNodeB

#*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
#*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0" 

#*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0" 

#**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
#**.sctp.enableHeartbeats = false

##########################################################
#                      Mobility                          #			
##########################################################		
#*.car[*].mobility.typename = "VeinsInetMobility"
*.car[*].veinsmobilityType = "org.car2x.veins.modules.mobility.traci.TraCIMobility"
#*.car[*].veinsmobility.setHostSpeed = false
#*.car[*0].veinsmobility.accidentCount = 1
#*.car[*0].veinsmobility.accidentStart = 73s
#*.car[*0].veinsmobility.accidentDuration = 50s

*.car[*].veinsmobility.x = 0
*.car[*].veinsmobility.y = 0
*.car[*].veinsmobility.z = 0


##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
*.veinsManager.moduleType = "simu5g.nodes.cars.NRCar"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("erlangen.launchd.xml")
*.veinsManager.updateInterval = 1s
##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 1s
*.manager.host = "localhost"
#*.manager.port = 9990
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("erlangen.launchd.xml")
*.manager.moduleType = "simu5g.nodes.NR.NRCarTrackable"
*.manager.moduleName = "car"
##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = false
*.connectionManager.maxInterfDist = 0m
*.connectionManager.drawMaxIntfDist = false

*.gNodeB*.mobility.initFromDisplayString = true

############*.car[*].cellularNic.nrPhy.dynamicCellAssociation = true


**.car[*].masterId = 0    
**.car[*].macCellId = 0   
**.car[*].nrMasterId = 1
**.car[*].nrMacCellId = 1

**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

**.hasRNISupport = false
#Ue.hasRNISupport = true
#LteNicBase.hasRNISupport = true
#eNodeB.hasRNISupport = true
 
##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################

#------------UEPingPongApp---------------
*.car[*].numApps = 4
*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "Platooning"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].localPort = 4000   #default value !!!	
*.car[*].app[1].startTime = 1s										#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = -1s	
*.car[*].app[1].payloadSize = 6500	#Precise unit !!!! --> platooning									
*.car[*].app[1].interReqTime = 0.02	#msg/s								#when sending stop MEC warning alert app
*.car[*].app[1].test = 1
*.car[*].app[1].mecAppName = "Platooning_car["+string(ancestorIndex(1))+"]"



*.car[*].app[2].typename = "DeviceApp"
*.car[*].app[2].localPort = 4502
*.car[*].app[2].UALCMPAddress = "ualcmp"
*.car[*].app[2].UALCMPPort = 1000
*.car[*].app[2].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[3].typename = "UEPingPongApp"
*.car[*].app[3].name = "Remote_driving"
*.car[*].app[3].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[3].deviceAppPort = 4502
*.car[*].app[3].startTime = 1s			
*.car[*].app[3].localPort = 4002							#when sending start warning alert app									#period to sending messages
#*.car[*].app[3].stopTime = -1s
*.car[*].app[3].payloadSize = 12000	#Precise unit !!!!  --> remote driving
*.car[*].app[3].interReqTime = 0.01   #msg/s
*.car[*].app[3].test = 1
*.car[*].app[3].mecAppName = "Remote_driving_car["+string(ancestorIndex(1))+"]"

**.numCars = 1

#sender
#*.car[2].app[2].typename = "CbrSender"
#*.car[2].app[2].PacketSize = 1000
#*.car[2].app[2].sampling_time = 0.01s
#*.car[2].app[2].localPort = 3088+ancestorIndex(0) 
#*.car[2].app[2].startTime = uniform(0s,0.02s)
#*.car[2].app[2].startTime = 0.02s

#*.car[2].app[2].destAddress = "car[2]"
#*.car[2].app[2].destPort = 1000


#*.car[1].app[2].typename = "CbrSender"
#*.car[1].app[2].PacketSize = 1000
#*.car[1].app[2].sampling_time = 0.01s
#*.car[1].app[2].localPort = 3088+ancestorIndex(0) 
#*.car[1].app[2].startTime = uniform(0s,0.02s)
#*.car[1].app[2].destAddress = "car[2]"
#*.car[1].app[2].startTime = 0.01s
#*.car[1].app[2].destPort = 1000
# Receiver
#*.car[1].app[2].typename = "CbrReceiver"
#*.car[1].app[2].localPort = 1000
#*.car[1].app[2].startTime = 0.01s

#*.car[0].app[2].typename = "CbrReceiver"
#*.car[0].app[2].localPort = 1000
#*.car[0].app[2].startTime = 0s



#----------------------------------------

######################_ME Host Side_#####################
# resources available
*.mecHost.maxMECApps = 100000											#max ME Apps to instantiate
*.mecHost.maxRam = 320000GB													#max KBytes of Ram Space 
*.mecHost.maxDisk = 200000TB	
											#max KBytes of Ram Space 
*.mecHost.maxCpuSpeed = 10000000		#CPU's clock speed in Million Instruction per Seconds (MIPS)									#max percentage of CPU
**.maxCpuSpeed = 100000	
#----------------------------------------

*.gNodeB*.mecHost = "mecHost"
#*.mecHost.bsList = "gNodeB1,gNodeB2"
*.mecHost.bsList = "gNodeB1"

*.mecHost.mecPlatformManager.mecOrchestrator = "mecOrchestrator"


#-------ETSI MEC Services:---------------

*.mecHost.mecPlatform.numMecServices = 1
*.mecHost.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost.mecPlatform.mecService[0].localAddress = "mecHost.virtualisationInfrastructure"
*.mecHost.mecPlatform.mecService[0].localPort = 10020

*.mecHost.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost.mecPlatform.mecService[0].requestServiceTime = 100us
*.mecHost.mecPlatform.mecService[0].subscriptionServiceTime = 11us

*.mecHost.mecPlatform.serviceRegistry.localAddress = "mecHost.virtualisationInfrastructure" #da cambiare!!
*.mecHost.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time

#------- MEC orchestrator---------------
**.mecOrchestrator.mecHostList = "mecHost"
*.mecOrchestrator.mecApplicationPackageList = "PingPongApp" 


# ----------------------------------------------------------------------------- #
# Config "OneFg_NBgApps"
#
# This configuration has one foreground MEC app and one generator of requests in order to create
# contention at the MEC services


#

[limited_performence]
#Reducing datasize

##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################

#------------UEWarningAlertApp---------------
#*.car[0..5].numApps = 0

*.car[*].numApps = 2


*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].localPort = 4000   #default value !!!	
*.car[*].app[1].startTime = 1s										#when sending start warning alert app									#period to sending messages
*.car[*].app[1].stopTime = 80s	
*.car[*].app[1].payloadSize = 65	#Precise unit !!!! --> platooning									
*.car[*].app[1].interReqTime = 2	#msg/s								#when sending stop MEC warning alert app
*.car[*].app[1].test = 1
*.car[*].app[1].mecAppName = "Platooning_car["+string(ancestorIndex(1))+"]"



#*.car[*].app[2].typename = "DeviceApp"
#*.car[*].app[2].localPort = 4502
#*.car[*].app[2].UALCMPAddress = "ualcmp"
#*.car[*].app[2].UALCMPPort = 1000
#*.car[*].app[2].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


#*.car[*].app[3].typename = "UEPingPongApp"
#*.car[*].app[3].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
#*.car[*].app[3].deviceAppPort = 4502
#*.car[*].app[3].startTime = 1s			
#*.car[*].app[3].localPort = 4002							#when sending start warning alert app									#period to sending messages
#*.car[*].app[3].stopTime = 80s
#*.car[*].app[3].payloadSize = 12	#Precise unit !!!!  --> remote driving
#*.car[*].app[3].interReqTime = 1   #msg/s
#*.car[*].app[3].test = 1
#*.car[*].app[3].mecAppName = "Remote_driving_car["+string(ancestorIndex(1))+"]"


[generic_1_app]
#------------UEWarningAlertApp---------------
*.car[*].numApps = 2

*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "Generic"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 0.1s			
*.car[*].app[1].localPort = 4000							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[1].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[1].interReqTime = uniform(0.01,1)   # 
*.car[*].app[1].test = 1
*.car[*].app[1].mecAppName = "Platooning_car["+string(ancestorIndex(1))+"]"

[yyy]
#------------UEWarningAlertApp---------------
*.car[*].numApps = 6

*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "TeleoperatedDriving"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 0.1s			
*.car[*].app[1].localPort = 4000							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[1].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[1].interReqTime = uniform(0.01,1)   # 
*.car[*].app[1].mecAppName = "TeleoperatedDriving_car["+string(ancestorIndex(1))+"]"






*.car[*].app[2].typename = "DeviceApp"
*.car[*].app[2].localPort = 4502
*.car[*].app[2].UALCMPAddress = "ualcmp"
*.car[*].app[2].UALCMPPort = 1000
*.car[*].app[2].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[3].typename = "UEPingPongApp"
*.car[*].app[3].name = "CooperativeSensing"
*.car[*].app[3].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[3].deviceAppPort = 4502
*.car[*].app[3].startTime = 0.1s			
*.car[*].app[3].localPort = 4003							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[3].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[3].interReqTime = uniform(0.01,1)   # 
*.car[*].app[3].mecAppName = "CooperativeSensing_car["+string(ancestorIndex(1))+"]"





*.car[*].app[4].typename = "DeviceApp"
*.car[*].app[4].localPort = 4504
*.car[*].app[4].UALCMPAddress = "ualcmp"
*.car[*].app[4].UALCMPPort = 1000
*.car[*].app[4].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[5].typename = "UEPingPongApp"
*.car[*].app[5].name = "CooperativeAwarness"
*.car[*].app[5].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[5].deviceAppPort = 4504
*.car[*].app[5].startTime = 0.1s			
*.car[*].app[5].localPort = 4005							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[5].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[5].interReqTime = uniform(0.01,1)   # 
*.car[*].app[5].mecAppName = "CooperativeAwarness_car["+string(ancestorIndex(1))+"]"


#*.mecHost.vim.scheduling = "fair"




[yyy-selective]

#------------UEWarningAlertApp---------------
*.car[*].numApps = 4

*.car[0..9].app[0].typename = "DeviceApp"
*.car[0..9].app[0].localPort = 4500
*.car[0..9].app[0].UALCMPAddress = "ualcmp"
*.car[0..9].app[0].UALCMPPort = 1000
*.car[0..9].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[0..9].app[1].typename = "UEPingPongApp"
*.car[0..9].app[1].name = "TeleoperatedDriving"
*.car[0..9].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[0..9].app[1].deviceAppPort = 4500
*.car[0..9].app[1].startTime = 0.1s			
*.car[0..9].app[1].localPort = 4000							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[0..9].app[1].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[0..9].app[1].interReqTime = uniform(0.01,1)   # 
*.car[0..9].app[1].mecAppName = "TeleoperatedDriving_car["+string(ancestorIndex(1))+"]"






*.car[*].app[2].typename = "DeviceApp"
*.car[*].app[2].localPort = 4502
*.car[*].app[2].UALCMPAddress = "ualcmp"
*.car[*].app[2].UALCMPPort = 1000
*.car[*].app[2].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[3].typename = "UEPingPongApp"
*.car[*].app[3].name = "CooperativeSensing"
*.car[*].app[3].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[3].deviceAppPort = 4502
*.car[*].app[3].startTime = 0.1s			
*.car[*].app[3].localPort = 4003							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[3].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[3].interReqTime = uniform(0.01,1)   # 
*.car[*].app[3].mecAppName = "CooperativeSensing_car["+string(ancestorIndex(1))+"]"





*.car[10..19].app[1].typename = "DeviceApp"
*.car[10..19].app[1].localPort = 4504
*.car[10..19].app[1].UALCMPAddress = "ualcmp"
*.car[10..19].app[1].UALCMPPort = 1000
*.car[10..19].app[1].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[10..19].app[2].typename = "UEPingPongApp"
*.car[10..19].app[2].name = "CooperativeAwarness"
*.car[10..19].app[2].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[10..19].app[2].deviceAppPort = 4504
*.car[10..19].app[2].startTime = 0.1s			
*.car[10..19].app[2].localPort = 4005							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[10..19].app[2].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[10..19].app[2].interReqTime = uniform(0.01,1)   # 
*.car[10..19].app[2].mecAppName = "CooperativeAwarness_car["+string(ancestorIndex(1))+"]"


#*.mecHost.vim.scheduling = "fair"



[teleoperated_driving]

#------------UEWarningAlertApp---------------
*.car[*].numApps = 2

*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "TeleoperatedDriving"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 0.1s			
*.car[*].app[1].localPort = 4000							#when sending start warning alert app									#period to sending messages
*.car[*].app[1].mecAppName = "TeleoperatedDriving_car["+string(ancestorIndex(1))+"]"



#*.mecHost.vim.scheduling = "fair"



[cooperative_sensing]
*.car[*].numApps = 2


*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4502
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "CooperativeSensing"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4502
*.car[*].app[1].startTime = 0.1s			
*.car[*].app[1].localPort = 4003							#when sending start warning alert app									#period to sending messages
*.car[*].app[1].stopTime = 50s
*.car[*].app[1].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[1].interReqTime = uniform(0.01,1)   # 
*.car[*].app[1].mecAppName = "CooperativeSensing_car["+string(ancestorIndex(1))+"]"




[test]
sim-time-limit = 5s

*.car[*].numApps = 2


*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4509
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "test"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4509
*.car[*].app[1].startTime = 0.1s			
*.car[*].app[1].localPort = 4009						#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 50s
*.car[*].app[1].payloadSize = 2000 #1450 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[1].interReqTime = 0.01 # 
*.car[*].app[1].mecAppName = "Test_car["+string(ancestorIndex(1))+"]"

**.ipv4.ip.crcMode = "computed" 
**.crcMode = "computed" 

**.radius= 750

#cmdenv-output-file = logs.txt
cmdenv-express-mode = false
cmdenv-redirect-output = true



[all_services]
sim-time-limit = 20s
#cmdenv-output-file = logs.txt
cmdenv-express-mode = false
cmdenv-redirect-output = true

*.car[*].numApps = 8


**.ipv4.ip.crcMode = "computed" 
**.crcMode = "computed" 

**.radius= 100








*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "TeleoperatedDriving"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4500
*.car[*].app[1].startTime = 0.1s			
*.car[*].app[1].localPort = 4000							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[1].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[1].interReqTime = uniform(0.01,1)   # 
*.car[*].app[1].mecAppName = "TeleoperatedDriving_car["+string(ancestorIndex(1))+"]"






*.car[*].app[2].typename = "DeviceApp"
*.car[*].app[2].localPort = 4502
*.car[*].app[2].UALCMPAddress = "ualcmp"
*.car[*].app[2].UALCMPPort = 1000
*.car[*].app[2].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[3].typename = "UEPingPongApp"
*.car[*].app[3].name = "CooperativeSensing"
*.car[*].app[3].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[3].deviceAppPort = 4502
*.car[*].app[3].startTime = 0.1s			
*.car[*].app[3].localPort = 4003							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[3].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[3].interReqTime = uniform(0.01,1)   # 
*.car[*].app[3].mecAppName = "CooperativeSensing_car["+string(ancestorIndex(1))+"]"





*.car[*].app[4].typename = "DeviceApp"
*.car[*].app[4].localPort = 4504
*.car[*].app[4].UALCMPAddress = "ualcmp"
*.car[*].app[4].UALCMPPort = 1000
*.car[*].app[4].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[5].typename = "UEPingPongApp"
*.car[*].app[5].name = "CooperativeAwarness"
*.car[*].app[5].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[5].deviceAppPort = 4504
*.car[*].app[5].startTime = 0.1s			
*.car[*].app[5].localPort = 4005							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[5].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[5].interReqTime = uniform(0.01,1)   # 
*.car[*].app[5].mecAppName = "CooperativeAwarness_car["+string(ancestorIndex(1))+"]"



*.car[*].app[6].typename = "DeviceApp"
*.car[*].app[6].localPort = 4506
*.car[*].app[6].UALCMPAddress = "ualcmp"
*.car[*].app[6].UALCMPPort = 1000
*.car[*].app[6].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[7].typename = "UEPingPongApp"
*.car[*].app[7].name = "CooperativeManeuver"
*.car[*].app[7].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[7].deviceAppPort = 4506
*.car[*].app[7].startTime = 0.1s			
*.car[*].app[7].localPort = 4006							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[7].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[7].interReqTime = uniform(0.01,1)   # 
*.car[*].app[7].mecAppName = "CooperativeAwarness_car["+string(ancestorIndex(1))+"]"

#*.mecHost.vim.scheduling = "fair"


[cooperative_services]
sim-time-limit = 30s
#cmdenv-output-file = logs.txt
cmdenv-express-mode = false
cmdenv-redirect-output = true

*.car[*].numApps = 6


**.ipv4.ip.crcMode = "computed" 
**.crcMode = "computed" 

**.radius= 500


*.car[*].app[2].typename = "DeviceApp"
*.car[*].app[2].localPort = 4502
*.car[*].app[2].UALCMPAddress = "ualcmp"
*.car[*].app[2].UALCMPPort = 1000
*.car[*].app[2].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[3].typename = "UEPingPongApp"
*.car[*].app[3].name = "CooperativeSensing"
*.car[*].app[3].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[3].deviceAppPort = 4502
*.car[*].app[3].startTime = 0.1s			
*.car[*].app[3].localPort = 4003							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[3].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[3].interReqTime = uniform(0.01,1)   # 
*.car[*].app[3].mecAppName = "CooperativeSensing_car["+string(ancestorIndex(1))+"]"





*.car[*].app[4].typename = "DeviceApp"
*.car[*].app[4].localPort = 4504
*.car[*].app[4].UALCMPAddress = "ualcmp"
*.car[*].app[4].UALCMPPort = 1000
*.car[*].app[4].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[5].typename = "UEPingPongApp"
*.car[*].app[5].name = "CooperativeAwarness"
*.car[*].app[5].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[5].deviceAppPort = 4504
*.car[*].app[5].startTime = 0.1s			
*.car[*].app[5].localPort = 4005							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[5].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[5].interReqTime = uniform(0.01,1)   # 
*.car[*].app[5].mecAppName = "CooperativeAwarness_car["+string(ancestorIndex(1))+"]"



*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4506
*.car[*].app[0].UALCMPAddress = "ualcmp"
*.car[*].app[0].UALCMPPort = 1000
*.car[*].app[0].appPackageSource = "ApplicationDescriptors/PingPongApp.json"


*.car[*].app[1].typename = "UEPingPongApp"
*.car[*].app[1].name = "CooperativeManeuver"
*.car[*].app[1].deviceAppAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].deviceAppPort = 4506
*.car[*].app[1].startTime = 0.1s			
*.car[*].app[1].localPort = 4006							#when sending start warning alert app									#period to sending messages
#*.car[*].app[1].stopTime = 10s
*.car[*].app[1].payloadSize = uniform(1000,40000) #6500 platooning	#Precise unit !!!!  --> remote driving
*.car[*].app[1].interReqTime = uniform(0.01,1)   # 
*.car[*].app[1].mecAppName = "CooperativeAwarness_car["+string(ancestorIndex(1))+"]"

#*.mecHost.vim.scheduling = "fair"





