//
// Generated file, do not edit! Created by opp_msgtool 6.0 from apps/voip/VoipPacket.msg.
//

#ifndef __VOIPPACKET_M_H
#define __VOIPPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class VoipPacket;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

/**
 * Class generated from <tt>apps/voip/VoipPacket.msg:21</tt> by opp_msgtool.
 * <pre>
 * class VoipPacket extends inet::FieldsChunk
 * {
 *     unsigned int IDtalk;
 *     unsigned int nframes;
 *     unsigned int IDframe;
 *     simtime_t arrivalTime;
 *     simtime_t playoutTime;
 *     simtime_t payloadTimestamp;
 *     unsigned int payloadSize;
 * }
 * </pre>
 */
class VoipPacket : public ::inet::FieldsChunk
{
  protected:
    unsigned int IDtalk = 0;
    unsigned int nframes = 0;
    unsigned int IDframe = 0;
    omnetpp::simtime_t arrivalTime = SIMTIME_ZERO;
    omnetpp::simtime_t playoutTime = SIMTIME_ZERO;
    omnetpp::simtime_t payloadTimestamp = SIMTIME_ZERO;
    unsigned int payloadSize = 0;

  private:
    void copy(const VoipPacket& other);

  protected:
    bool operator==(const VoipPacket&) = delete;

  public:
    VoipPacket();
    VoipPacket(const VoipPacket& other);
    virtual ~VoipPacket();
    VoipPacket& operator=(const VoipPacket& other);
    virtual VoipPacket *dup() const override {return new VoipPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual unsigned int getIDtalk() const;
    virtual void setIDtalk(unsigned int IDtalk);

    virtual unsigned int getNframes() const;
    virtual void setNframes(unsigned int nframes);

    virtual unsigned int getIDframe() const;
    virtual void setIDframe(unsigned int IDframe);

    virtual omnetpp::simtime_t getArrivalTime() const;
    virtual void setArrivalTime(omnetpp::simtime_t arrivalTime);

    virtual omnetpp::simtime_t getPlayoutTime() const;
    virtual void setPlayoutTime(omnetpp::simtime_t playoutTime);

    virtual omnetpp::simtime_t getPayloadTimestamp() const;
    virtual void setPayloadTimestamp(omnetpp::simtime_t payloadTimestamp);

    virtual unsigned int getPayloadSize() const;
    virtual void setPayloadSize(unsigned int payloadSize);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VoipPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VoipPacket& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline VoipPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<VoipPacket*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __VOIPPACKET_M_H

