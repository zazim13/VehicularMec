//
// Generated file, do not edit! Created by opp_msgtool 6.0 from common/timer/TTimerMsg.msg.
//

#ifndef __TTIMERMSG_M_H
#define __TTIMERMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class TTimerMsg;
#include "common/LteCommon_m.h" // import common.LteCommon

// cplusplus {{
    enum TTimerType
    {
       TTSIMPLE, TTMULTI
    };
// }}

/**
 * Class generated from <tt>common/timer/TTimerMsg.msg:23</tt> by opp_msgtool.
 * <pre>
 * packet TTimerMsg
 * {
 *     unsigned int timerId;
 *     unsigned short type \@enum(TTimerType);
 * }
 * </pre>
 */
class TTimerMsg : public ::omnetpp::cPacket
{
  protected:
    unsigned int timerId = 0;
    unsigned short type = 0;

  private:
    void copy(const TTimerMsg& other);

  protected:
    bool operator==(const TTimerMsg&) = delete;

  public:
    TTimerMsg(const char *name=nullptr, short kind=0);
    TTimerMsg(const TTimerMsg& other);
    virtual ~TTimerMsg();
    TTimerMsg& operator=(const TTimerMsg& other);
    virtual TTimerMsg *dup() const override {return new TTimerMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual unsigned int getTimerId() const;
    virtual void setTimerId(unsigned int timerId);

    virtual unsigned short getType() const;
    virtual void setType(unsigned short type);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TTimerMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TTimerMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline TTimerMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<TTimerMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __TTIMERMSG_M_H

