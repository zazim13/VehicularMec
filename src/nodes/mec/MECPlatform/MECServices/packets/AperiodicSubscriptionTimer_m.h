//
// Generated file, do not edit! Created by opp_msgtool 6.0 from nodes/mec/MECPlatform/MECServices/packets/AperiodicSubscriptionTimer.msg.
//

#ifndef __APERIODICSUBSCRIPTIONTIMER_M_H
#define __APERIODICSUBSCRIPTIONTIMER_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class AperiodicSubscriptionTimer_m;
/**
 * Class generated from <tt>nodes/mec/MECPlatform/MECServices/packets/AperiodicSubscriptionTimer.msg:13</tt> by opp_msgtool.
 * <pre>
 * message AperiodicSubscriptionTimer_m
 * {
 *     double period;
 * }
 * </pre>
 */
class AperiodicSubscriptionTimer_m : public ::omnetpp::cMessage
{
  protected:
    double period = 0;

  private:
    void copy(const AperiodicSubscriptionTimer_m& other);

  protected:
    bool operator==(const AperiodicSubscriptionTimer_m&) = delete;

  public:
    AperiodicSubscriptionTimer_m(const char *name=nullptr, short kind=0);
    AperiodicSubscriptionTimer_m(const AperiodicSubscriptionTimer_m& other);
    virtual ~AperiodicSubscriptionTimer_m();
    AperiodicSubscriptionTimer_m& operator=(const AperiodicSubscriptionTimer_m& other);
    virtual AperiodicSubscriptionTimer_m *dup() const override {return new AperiodicSubscriptionTimer_m(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual double getPeriod() const;
    virtual void setPeriod(double period);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AperiodicSubscriptionTimer_m& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AperiodicSubscriptionTimer_m& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline AperiodicSubscriptionTimer_m *fromAnyPtr(any_ptr ptr) { return check_and_cast<AperiodicSubscriptionTimer_m*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __APERIODICSUBSCRIPTIONTIMER_M_H

